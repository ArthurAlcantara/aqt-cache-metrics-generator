/*
 Generated by org.infinispan.protostream.annotations.impl.processor.AutoProtoSchemaBuilderAnnotationProcessor
 for class br.com.bb.aqt.models.ListenerChema
 annotated with @org.infinispan.protostream.annotations.AutoProtoSchemaBuilder(dependsOn=, marshallersOnly=false, service=true, autoImportClasses=false, excludeClasses=, includeClasses=br.com.bb.aqt.models.CliDatagridCDC,br.com.bb.aqt.models.EventoListenerModel, basePackages={}, value={}, schemaPackageName="METRICS", schemaFilePath="", schemaFileName="", className="")
 */

package br.com.bb.aqt.models;

/**
 * WARNING: Generated code! Do not edit!
 */
@javax.annotation.Generated(
   value = "org.infinispan.protostream.annotations.impl.processor.AutoProtoSchemaBuilderAnnotationProcessor",
   comments = "Please do not edit this file!"
)
@org.infinispan.protostream.annotations.impl.processor.OriginatingClasses({
   br.com.bb.aqt.models.CliDatagridCDC.class,
   br.com.bb.aqt.models.EventoListenerModel.class
})
/*@org.infinispan.protostream.annotations.AutoProtoSchemaBuilder(
   className = "ListenerChemaImpl",
   schemaFileName = "ListenerChema.proto",
   schemaFilePath = "",
   schemaPackageName = "METRICS",
   service = true,
   marshallersOnly = false,
   autoImportClasses = false,
   includeClasses = {
      br.com.bb.aqt.models.CliDatagridCDC.class,
      br.com.bb.aqt.models.EventoListenerModel.class
   }
)*/
@SuppressWarnings("all")
public class ListenerChemaImpl implements br.com.bb.aqt.models.ListenerChema, org.infinispan.protostream.GeneratedSchema {

   private static final String PROTO_SCHEMA = "// File name: ListenerChema.proto\n" +
   "// Generated from : br.com.bb.aqt.models.ListenerChema\n" +
   "\n" +
   "syntax = \"proto2\";\n" +
   "\n" +
   "package METRICS;\n" +
   "\n" +
   "\n" +
   "\n" +
   "/**\n" +
   " * @Indexed\n" +
   " */\n" +
   "message EventoListenerModel {\n" +
   "   \n" +
   "   optional int64 cHAVE = 1;\n" +
   "   \n" +
   "   optional int64 rEGTIMESTAMP = 2;\n" +
   "}\n" +
   "\n" +
   "\n" +
   "/**\n" +
   " * @Indexed\n" +
   " */\n" +
   "message CliDatagridCDC {\n" +
   "   \n" +
   "   optional int64 cOD = 1;\n" +
   "   \n" +
   "   optional int32 cOD_TIPO = 2;\n" +
   "   \n" +
   "   optional int64 cOD_CPF_CGC = 3;\n" +
   "   \n" +
   "   optional string nOM = 4;\n" +
   "   \n" +
   "   optional int64 cOD_INFO_CPF_CGC = 5;\n" +
   "   \n" +
   "   optional int64 dTA_CDTO = 6;\n" +
   "   \n" +
   "   optional int32 cOD_PREF_AGEN = 7;\n" +
   "   \n" +
   "   optional int64 dTA_ULTA_ATLZ = 8;\n" +
   "   \n" +
   "   optional int64 dTA_NASC_CSNT = 9;\n" +
   "   \n" +
   "   optional int32 cOD_TIPO_DCTO = 10;\n" +
   "   \n" +
   "   optional string cOD_DCTO = 11;\n" +
   "   \n" +
   "   optional string nOM_ORGA_EMSS = 12;\n" +
   "   \n" +
   "   optional int32 cOD_SITU = 13;\n" +
   "   \n" +
   "   optional int64 dTA_EMSS_DCTO = 14;\n" +
   "   \n" +
   "   optional string iND_FICH_PROV = 15;\n" +
   "   \n" +
   "   optional int64 dTA_REVISAO = 16;\n" +
   "   \n" +
   "   optional int64 cOD_MATR_FUNCI_REV = 17;\n" +
   "   \n" +
   "   optional int32 cOD_TTDD_CPF = 18;\n" +
   "   \n" +
   "   optional string iND_IRREG_1 = 19;\n" +
   "   \n" +
   "   optional string iND_IRREG_2 = 20;\n" +
   "   \n" +
   "   optional int64 dTA_INI_CORREN = 21;\n" +
   "   \n" +
   "   optional int64 cOD_PAIS_ORIG = 22;\n" +
   "   \n" +
   "   optional string iND_EXTR = 23;\n" +
   "   \n" +
   "   optional int32 cOD_MERC = 24;\n" +
   "   \n" +
   "   optional int32 cOD_CTGR = 25;\n" +
   "   \n" +
   "   optional int32 cD_EST_CAD = 26;\n" +
   "   \n" +
   "   optional int32 cD_TIP_CADM = 27;\n" +
   "   \n" +
   "   optional int32 cD_OGM_CADM = 28;\n" +
   "   \n" +
   "   optional int64 nR_IDFC_OGM_CAD = 29;\n" +
   "   \n" +
   "   optional string iN_BEM_N_CADD = 30;\n" +
   "}\n" +
   "";
   
   @Override
   public String getProtoFileName() { return "ListenerChema.proto"; }
   
   @Override
   public String getProtoFile() { return PROTO_SCHEMA; }
   
   @Override
   public void registerSchema(org.infinispan.protostream.SerializationContext serCtx) {
      serCtx.registerProtoFiles(org.infinispan.protostream.FileDescriptorSource.fromString(getProtoFileName(), getProtoFile()));
   }
   
   @Override
   public void registerMarshallers(org.infinispan.protostream.SerializationContext serCtx) {
      serCtx.registerMarshaller(new br.com.bb.aqt.models.EventoListenerModel$___Marshaller_c3bf58f3be9cc38bf809d0684a6f01336177781c27c4dee3d19abb34ab0ebdb2());
      serCtx.registerMarshaller(new br.com.bb.aqt.models.CliDatagridCDC$___Marshaller_f1ee5bafd7638b1f59a265c290f2fda1f7d3472a9192d44d0cf40580a560ed5b());
   }
}
